name: CI/CD with Selective Security Checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Lint frontend code
        working-directory: ./frontend
        run: npm run lint

      - name: Run frontend unit tests
        working-directory: ./frontend
        run: npm test

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Lint backend code
        working-directory: ./backend
        run: npm run lint

      - name: Run backend unit tests
        working-directory: ./backend
        run: npm test

  security-scans:
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL analysis (SAST)
        uses: github/codeql-action/analyze@v3

      - name: Run Snyk SCA scan
        uses: snyk/actions/node@master
        with:
          args: --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build-and-push:
    runs-on: ubuntu-latest
    needs: [lint-and-test, security-scans]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push frontend image
        run: |
          docker build -t tush1809/3-tier-frontend:latest ./frontend
          docker push tush1809/3-tier-frontend:latest

      - name: Build and push backend image
        run: |
          docker build -t tush1809/3-tier-backend:latest ./backend
          docker push tush1809/3-tier-backend:latest

  deploy:
    runs-on: self-hosted
    needs: build-and-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s_manifests/mongo/ -n workshop
          kubectl apply -f k8s_manifests/ -n workshop
