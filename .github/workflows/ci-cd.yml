name: CI/CD with Security Checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # ------------------------
  # 1. Lint Frontend
  # ------------------------
  lint-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci
      - name: Run frontend lint
        working-directory: ./frontend
        run: npm run lint

  # ------------------------
  # 2. Lint Backend
  # ------------------------
  lint-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci
      - name: Run backend lint
        working-directory: ./backend
        run: npm run lint

  # ------------------------
  # 3. Security Scan (CodeQL)
  # ------------------------
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@v3

  # ------------------------
  # 4. Build Docker Images
  # ------------------------
  build:
    runs-on: ubuntu-latest
    needs: [lint-frontend, lint-backend, security-scan]
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push frontend image
        run: |
          docker build -t tush1809/3-tier-frontend:latest ./frontend
          docker push tush1809/3-tier-frontend:latest

      - name: Build & push backend image
        run: |
          docker build -t tush1809/3-tier-backend:latest ./backend
          docker push tush1809/3-tier-backend:latest

  # ------------------------
  # 5. Deploy to Kubernetes
  # ------------------------
  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s_manifests/mongo/ -n workshop
          kubectl apply -f k8s_manifests/ -n workshop
