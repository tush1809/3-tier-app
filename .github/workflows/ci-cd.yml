name: CI/CD with Security Checks


on:
  push:
    branches: [main]
  pull_request:
    branches: [main]


jobs:
  security:
    runs-on: ubuntu-latest


    steps:
      - name: Checkout code
        uses: actions/checkout@v3


      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16


      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci


      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci


      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript


      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@v3


  build:
    runs-on: ubuntu-latest  # Make sure this runner is on the same machine as your kubeadm cluster
    needs: lint-and-security


    steps:
      - name: Checkout code
        uses: actions/checkout@v3


      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      - name: Build frontend Docker image
        run: docker build -t tush1809/3-tier-frontend:latest ./frontend


      - name: push frontend
        run: docker push tush1809/3-tier-frontend:latest


      - name: Build backend Docker image
        run: docker build -t tush1809/3-tier-backend:latest ./backend


      - name: push frontend
        run: docker push tush1809/3-tier-backend:latest


      - name: Load images into local Kubernetes (if required)
        run: |
          # This step is only needed if your cluster doesn't share the same Docker daemon
          echo "Make sure your images are accessible to the cluster"
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s_manifests/mongo/ -n workshop
          kubectl apply -f k8s_manifests/ -n workshop

